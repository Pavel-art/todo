package com.example.todo.presentationimport android.os.Bundleimport android.text.Editableimport android.text.TextWatcherimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.Toastimport androidx.fragment.app.Fragmentimport androidx.lifecycle.ViewModelProviderimport com.example.todo.Rimport com.example.todo.domain.entity.TodoModelimport com.example.todo.databinding.FragmentAddTodoBindingclass AddTodoItemFragment : Fragment() {    private lateinit var todoViewModel: TodoViewModel    private var _binding: FragmentAddTodoBinding? = null    private val binding: FragmentAddTodoBinding        get() = _binding ?: throw RuntimeException("FragmentAddTodoBinding == null")    override fun onCreateView(        inflater: LayoutInflater,        container: ViewGroup?,        savedInstanceState: Bundle?    ): View {        _binding = FragmentAddTodoBinding.inflate(inflater, container, false)        return binding.root    }    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {        super.onViewCreated(view, savedInstanceState)        todoViewModel = ViewModelProvider(this)[TodoViewModel::class.java]        binding.btnAddTodo.setOnClickListener {            val textFromInput = binding.textInput.text.toString()            todoViewModel.addTodo(textFromInput)        }        addTextChangeListeners()        observeViewModel()    }    private fun observeViewModel() {        // устанавливаем описание ошибки в поле ввода        todoViewModel.errorInputTitle.observe(viewLifecycleOwner) {            val message = if (it) {                getString(R.string.error_input_title)            } else {                null            }            binding.textInputLayout.error = message        }        // подписываемся на LiveData которая сообщает что можно закрыть экран        todoViewModel.shouldCloseScreen.observe(viewLifecycleOwner) {            requireActivity().supportFragmentManager.popBackStack()            Toast.makeText(activity, "TODO ADDED", Toast.LENGTH_SHORT).show()        }    }    private fun addTextChangeListeners() {        binding.textInput.addTextChangedListener(object : TextWatcher {            override fun beforeTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {            }            override fun onTextChanged(p0: CharSequence?, p1: Int, p2: Int, p3: Int) {                // сбрасываем ошибку в поле ввода в момент ввода текста                todoViewModel.resetErrorInputTitle()            }            override fun afterTextChanged(p0: Editable?) {            }        })    }    override fun onDestroyView() {        super.onDestroyView()        _binding = null    }    companion object {        fun instance(): AddTodoItemFragment {            return AddTodoItemFragment()        }    }}