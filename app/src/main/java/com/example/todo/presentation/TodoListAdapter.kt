package com.example.todo.presentationimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.Toastimport androidx.recyclerview.widget.DiffUtilimport androidx.recyclerview.widget.ListAdapterimport androidx.recyclerview.widget.RecyclerViewimport com.example.todo.Rimport com.example.todo.databinding.FragmentTodoItemBindingimport com.example.todo.domain.entity.TodoModelclass TodoListAdapter : ListAdapter<TodoModel, TodoListAdapter.Holder>(Comparator()) {    var checkBoxListener: ((TodoModel) -> Unit)? = null    class Holder(view: View) : RecyclerView.ViewHolder(view) {        private val binding = FragmentTodoItemBinding.bind(view)        val tvTitle = binding.tvText        val checkBoxCompleted = binding.checkBox    }    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): Holder {        val view = LayoutInflater.from(parent.context).inflate(R.layout.fragment_todo_item, parent, false)        return Holder(view)    }    override fun onBindViewHolder(holder: Holder, position: Int) {        val item = getItem(position)        holder.tvTitle.text = item.title        holder.checkBoxCompleted.isChecked = item.completed        holder.checkBoxCompleted.setOnCheckedChangeListener{ _,_ ->            checkBoxListener?.invoke(item)        }    }    class Comparator : DiffUtil.ItemCallback<TodoModel>() {        override fun areItemsTheSame(oldItem: TodoModel, newItem: TodoModel): Boolean {            return oldItem.id == newItem.id        }        override fun areContentsTheSame(oldItem: TodoModel, newItem: TodoModel): Boolean {            return oldItem == newItem        }    }}